[{"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/index.js":"1","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/App.js":"2","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/LoginPage/LoginPage.js":"3","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/LandingPage/LandingPage.js":"4","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/RegisterPage/RegisterPage.js":"5","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_reducers/index.js":"6","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_actions/user_action.js":"7","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_actions/types.js":"8","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_reducers/user_reducer.js":"9","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/hoc/auth.js":"10","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/NavBar/NavBar.js":"11"},{"size":645,"mtime":1610992028836,"results":"12","hashOfConfig":"13"},{"size":743,"mtime":1611326691042,"results":"14","hashOfConfig":"13"},{"size":2493,"mtime":1611390045964,"results":"15","hashOfConfig":"13"},{"size":301,"mtime":1611327127175,"results":"16","hashOfConfig":"13"},{"size":3788,"mtime":1611390021574,"results":"17","hashOfConfig":"13"},{"size":155,"mtime":1610996614530,"results":"18","hashOfConfig":"13"},{"size":685,"mtime":1611000513426,"results":"19","hashOfConfig":"13"},{"size":121,"mtime":1611000367959,"results":"20","hashOfConfig":"13"},{"size":476,"mtime":1611000585005,"results":"21","hashOfConfig":"13"},{"size":1192,"mtime":1611020985662,"results":"22","hashOfConfig":"13"},{"size":2124,"mtime":1611390115562,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"17caifx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/index.js",[],["50","51"],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/App.js",[],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/LoginPage/LoginPage.js",["52"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../../../_actions/user_action';\nimport { withRouter } from 'react-router-dom'\nimport { Form, Input, Button, Checkbox } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\n\nfunction LoginPage({history}) {\n    const dispatch = useDispatch();\n\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n\n    const onChange = (e) => {\n        const {target: {name,value}} = e;\n        if(name === 'email'){\n            setEmail(value)\n        }else if(name === 'password'){\n            setPassword(value)\n        }\n    }\n\n    const onSubmit = () => {\n        let body = {\n            email,\n            password,\n        }\n        dispatch(loginUser(body))\n        .then(res => {\n            if(res.payload.loginSuccess){\n                history.push('/')\n            } else {\n                alert('Error')\n            }\n        })\n\n    }\n    return (\n      <div style={{\n          display: 'flex', justifyContent: 'center' , alignItems: 'center',\n          width: '100%', height: '100vh'\n       }}>\n          <Form {...layout}\n          name=\"basic\"\n          initialValues={{remember: true,}}\n          onFinish={onSubmit} >\n              <Form.Item\n                  label=\"Email\"\n                  name=\"email\"\n                  rules={[\n                      {\n                          required: true,\n                          message: 'Please input your Email!',\n                      },\n                         ]}>\n              <Input name='email' value={email} type='email' onChange={onChange}/>\n              </Form.Item>\n              <Form.Item\n                  label=\"Password\"\n                  name=\"password\"\n                  rules={[\n                  {\n                      required: true,\n                      message: 'Please input your password!',\n                  },\n                         ]}>\n              <Input.Password name='password' value={password} type='password'  onChange={onChange}/>\n               </Form.Item>\n              <Form.Item {...tailLayout}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                              Log in\n                  </Button>\n              </Form.Item>\n              </Form>\n        </div>\n    )\n}\n\nexport default withRouter(LoginPage)\n","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/LandingPage/LandingPage.js",[],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/RegisterPage/RegisterPage.js",["53"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { registerUser } from '../../../_actions/user_action';\nimport { withRouter } from 'react-router-dom'\nimport { Form, Input, Button, Checkbox } from 'antd';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\n\nfunction RegisterPage({history}) {\n\n    const dispatch = useDispatch();\n\n    const [name,setName] = useState('')\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n    const [confirmPassword,setConfirmPassword] = useState('')\n\n    const onChange = (e) => {\n        const {target: {name,value}} = e;\n        if(name === 'email'){\n            setEmail(value)\n        }else if(name === 'password'){\n            setPassword(value)\n        }else if(name === 'name'){\n            setName(value)\n        }else if(name === 'confirmPassword'){\n            setConfirmPassword(value)\n        }else {\n            return null;\n        }\n    }\n\n    const onSubmit = () => {\n        if(password !== confirmPassword){\n            return alert('Please check confirm password')\n        }\n\n        let body = {\n            email,\n            password,\n            name\n        }\n        dispatch(registerUser(body))\n        .then(res => {\n            if(res.payload.success){\n                history.push('/login')\n            } else {\n                alert('Failed to sign up')\n            }\n        })\n\n    }\n    return (\n        <div style={{\n            display: 'flex', justifyContent: 'center' , alignItems: 'center',\n            width: '100%', height: '100vh'\n        }}>\n             <Form {...layout}\n          name=\"basic\"\n          initialValues={{remember: true,}}\n          onFinish={onSubmit} >\n              <Form.Item\n                  label=\"Name\"\n                  name=\"name\"\n                  rules={[\n                      {\n                          required: true,\n                          message: 'Please input your Name!',\n                      },\n                         ]}>\n              <Input name='name' value={name} type='text' onChange={onChange}/>\n              </Form.Item>\n              <Form.Item\n                  label=\"Email\"\n                  name=\"email\"\n                  rules={[\n                      {\n                          required: true,\n                          message: 'Please input your Email!',\n                      },\n                         ]}>\n              <Input name='email' value={email} type='email' onChange={onChange}/>\n              </Form.Item>\n              <Form.Item\n                  label=\"Password\"\n                  name=\"password\"\n                  rules={[\n                  {\n                      required: true,\n                      message: 'Please input your password!',\n                  },\n                         ]}>\n              <Input.Password name='password' value={password} type='password'  onChange={onChange}/>\n               </Form.Item>\n              <Form.Item\n                  label=\"Confirm\"\n                  name=\"confirm password\"\n                  rules={[\n                  {\n                      required: true,\n                      message: 'Please input your Confirm Password!',\n                  },\n                         ]}>\n              <Input.Password name='confirmPassword' value={confirmPassword} type='password'  onChange={onChange}/>\n               </Form.Item>\n              <Form.Item {...tailLayout}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                  Register\n                  </Button>\n              </Form.Item>\n              </Form>\n        </div>\n    )\n}\n\nexport default withRouter(RegisterPage)\n","/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_reducers/index.js",[],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_actions/user_action.js",[],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_actions/types.js",[],["54","55"],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/_reducers/user_reducer.js",[],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/hoc/auth.js",[],"/Users/taerikim/Documents/web/johnAhn/boiler-plate/client/src/components/views/NavBar/NavBar.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":31,"nodeType":"62","messageId":"63","endLine":5,"endColumn":39},{"ruleId":"60","severity":1,"message":"61","line":5,"column":31,"nodeType":"62","messageId":"63","endLine":5,"endColumn":39},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar",["66"],["67"],"no-global-assign","no-unsafe-negation"]